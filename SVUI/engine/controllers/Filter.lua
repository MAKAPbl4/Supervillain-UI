--[[
##############################################################################
_____/\\\\\\\\\\\____/\\\________/\\\__/\\\________/\\\__/\\\\\\\\\\\_       #
 ___/\\\/////////\\\_\/\\\_______\/\\\_\/\\\_______\/\\\_\/////\\\///__      #
  __\//\\\______\///__\//\\\______/\\\__\/\\\_______\/\\\_____\/\\\_____     #
   ___\////\\\__________\//\\\____/\\\___\/\\\_______\/\\\_____\/\\\_____    #
    ______\////\\\________\//\\\__/\\\____\/\\\_______\/\\\_____\/\\\_____   #
     _________\////\\\______\//\\\/\\\_____\/\\\_______\/\\\_____\/\\\_____  #
      __/\\\______\//\\\______\//\\\\\______\//\\\______/\\\______\/\\\_____ #
       _\///\\\\\\\\\\\/________\//\\\________\///\\\\\\\\\/____/\\\\\\\\\\\_#
        ___\///////////___________\///___________\/////////_____\///////////_#
##############################################################################
S U P E R - V I L L A I N - U I   By: Munglunch                              #
##############################################################################
########################################################## 
LOCALIZED LUA FUNCTIONS
##########################################################
]]--
--[[ GLOBALS ]]--
local _G = _G;
local unpack    = _G.unpack;
local select    = _G.select;
local pairs     = _G.pairs;
local type      = _G.type;
local error     = _G.error;
local pcall     = _G.pcall;
local tostring  = _G.tostring;
local tonumber  = _G.tonumber;
local string    = _G.string;
local table     = _G.table;
--[[ STRING METHODS ]]--
local gmatch, gsub = string.gmatch, string.gsub;
--[[ TABLE METHODS ]]--
local tcopy, twipe, tdump = table.copy, table.wipe, table.dump;
--[[ MUNGLUNCH's FASTER ASSERT FUNCTION ]]--
local assert = enforce;
--[[ 
########################################################## 
GET ADDON DATA
##########################################################
]]--
local SuperVillain, L, P, C, G = unpack(select(2, ...));
--[[ 
########################################################## 
RAW SPELL ID LISTS
##########################################################
]]--
local RawFilterIDs ={
	["Blocked"] = [[36900,36901,36893,114216,97821,36032,132365,8733,57724,25771,57723,36032,58539,26013,6788,71041,41425,55711,8326,23445,24755,25163,80354,95809,95223,124275,124274,124273,117870,123981,15007,113942,89140]],

	["Allowed"] = [[31821,2825,32182,80353,90355,47788,33206,116849,22812,1490,116202,123059,136431,137332,137375,144351,142863,142864,142865,143198]],

	["Strict"] = [[123059,136431,137332,137375,144351,142863,142864,142865,143198]],

	["CC"] = [[47476,91800,91807,91797,108194,115001,33786,2637,339,78675,22570,5211,9005,102359,99,127797,45334,102795,114238,113004,3355,1513,19503,34490,24394,64803,19386,117405,128405,50519,91644,90337,54706,4167,90327,56626,50245,50541,96201,96201,31661,118,55021,122,82691,118271,44572,33395,102051,20066,10326,853,105593,31935,105421,605,64044,8122,9484,15487,114404,88625,113792,87194,2094,1776,6770,1833,51722,1330,408,88611,115197,113953,51514,64695,63685,76780,118905,118345,710,6789,118699,5484,6358,30283,24259,115782,115268,118093,89766,137143,20511,7922,676,105771,107566,132168,107570,118895,18498,116706,117368,115078,122242,119392,119381,120086,116709,123407,140023,25046,20549,107079]],

	["Shield"] = [[17,47515,45243,45438,115610,48797,48792,49039,87256,55233,50461,33206,47788,62618,47585,104773,110913,108359,22812,102342,106922,61336,19263,53480,1966,31224,74001,5277,45182,98007,30823,108271,1022,6940,114039,31821,498,642,86659,31850,118038,55694,97463,12975,114029,871,114030,120954,131523,122783,122278,115213,116849,20594]],

	["Player"] = [[17,47515,45243,45438,45438,115610,110909,12051,12472,80353,12042,32612,110960,108839,111264,108843,48797,48792,49039,87256,49222,55233,50461,49016,51271,96268,33206,47788,62618,47585,6346,10060,114239,119032,27827,104773,110913,108359,113860,113861,113858,88448,22812,102342,106922,61336,117679,102543,102558,102560,16689,132158,106898,1850,106951,29166,52610,69369,112071,124974,19263,53480,51755,54216,34471,3045,3584,131894,90355,90361,31224,74001,5277,45182,51713,114018,2983,121471,11327,108212,57933,79140,13750,98007,30823,108271,16188,2825,79206,16191,8178,58875,108281,108271,16166,114896,1044,1022,1038,6940,114039,31821,498,642,86659,20925,31850,31884,53563,31842,54428,105809,85499,118038,55694,97463,12975,114029,871,114030,18499,1719,23920,114028,46924,3411,107574,120954,131523,122783,122278,115213,116849,125174,116841,20594,59545,20572,26297,68992]],

	["Raid"] = [[116281,116784,116417,116942,116161,117708,118303,118048,118135,117878,117949,116835,116778,116525,122761,122760,122740,123812,123180,123474,122835,123081,122125,121885,121949,117436,118091,117519,122752,123011,116161,123121,119985,119086,119775,122151,138349,137371,136767,137641,137359,137972,136903,136753,137633,137731,133767,133768,136050,138569,134691,137440,137408,137360,135000,143436,143579,147383,146124,144851,144358,144774,147207,144215,143990,144330,143494,142990,143919,143766,143773,146589,143777,143385,143974,145183]]
};
--[[ 
########################################################## 
FILTERING MASTER METATABLE
##########################################################
]]--
local METAFUNC = {}
METAFUNC.new = function()
	local db = {};
	local safe_db = {};
	local repo = {};
	local overrides = {
		["45438"] = 5, ["48797"] = 5, ["87256"] = 4, 
		["33206"] = 3, ["47585"] = 5, ["22812"] = 2, 
		["102342"] = 2, ["19263"] = 5, ["5277"] = 5, 
		["1022"] = 5, ["31821"] = 3, ["498"] = 2, 
		["642"] = 5, ["86659"] = 4, ["31850"] = 4, 
		["118038"] = 5, ["114029"] = 2, ["871"] = 3, 
		["120954"] = 2, ["131523"] = 5
	};

	local lookup = function(id)
		local n, _, _, _, _, _, _, _, _ = GetSpellInfo(id) 	
		if not n then
			if type(id) == "string" then
				n = id
			else
				print('|cffFF9900SVUI:|r Spell not found: (#ID) '..id)
				n = "Voodoo Doll";
			end
		end
		return n
	end;

	local rawcut = function(k, x)
		local t = {};
		for id in gmatch(x, '([^,]+)') do
			if(id) then 
				local n = lookup(id);
				local p = overrides[tostring(id)] or 0;
				if k == "Strict" then
					t[n] = {['enable'] = true, ['spellID'] = id, ['priority'] = p}
				else
					t[n] = {['enable'] = true, ['priority'] = p}
				end
			end 
		end;
		return t
	end;

	local process = function(id, k)
		local n, t;
		if(id) then 
			n = lookup(id);
			local p = overrides[tostring(id)] or 0;
			if k == "Strict" then
				t = {['enable'] = true, ['spellID'] = id, ['priority'] = p}
			else
				t = {['enable'] = true, ['priority'] = p}
			end
		end
		return n, t
	end;

	do
		for k, t in pairs(RawFilterIDs) do
			local c = rawcut(k,t);
			rawset(db, k, c);
	    end;
	end;

	local methods={
		--[[ COMMON INTERNALS ]]--
		Refresh = function(_)
			assert(type(repo) == "table", "Can not refresh without defining a repository.");
			local nt = {}
			for k, t in pairs(db) do
				rawset(nt, k, t);
		    end;
			for k, t in pairs(repo) do
				for i, s in pairs(t) do
					local n = lookup(i);
					if not nt[k] then
						rawset(nt, k, {});
					end
					if n then
		    			rawset(nt[k], n, s);
		    		end
		    	end
		    end;
		    twipe(db)
		    db = nt
		end,
		Update = function(_, c, i, v)
			local n = lookup(i)
			repo[c][n] = v
			_:Refresh()
		end,
		SetRepository = function(_, t)
			assert(type(t) == "table", "Repository must be a table.");
			if type(repo) == "table" and #repo > 0 then repo = {} end;
			repo = t;
			_:Refresh()
		end,
	};
	local mt ={
		__index = function(t,  k)
         	v = rawget(db,  k)
	        if v then
	            return v
	        end
	        --print("SuperVillain.Filter >>> : Bad Index Called.")
      	end, 
      	__newindex = function(t,  k,  v)
			if rawget(db,  k) then
				rawset(db,  k,  v)
				return
			elseif type(repo)=="table" and repo[k] then
	        	local n = repo[k]
	        	rawset(db,  k,  n)
	        	return
			end
			--print("SuperVillain.Filter >>> : Bad NewIndex Referenced.")
		end, 
		__metatable = {}, 
		__pairs = function(t,  k,  v) return next,  db,  nil end, 
		__ipairs = function()
			local function iter(a,  i)
				i = i + 1
				local v = a[i]
				if v then
					return i,  v
				end
			end
			return iter,  db,  0
		end, 
		__len = function(t)
			local count = 0
			for _ in pairs(db) do count = count + 1 end
			return count
		end, 
		__tostring = function(t) return "SuperVillain.Filter >>> [" .. tdump(db) .. "]" end, 
	};
	setmetatable(methods,  mt)
   	return methods
end;
do
	SuperVillain.Filter = METAFUNC.new();
end;